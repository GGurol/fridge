// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

/**
 * Class for family data to be returned via API
 */
export type FamilyPublic = {
    name: string;
    invite_code: string;
    id: string;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ListCreate = {
    name: string;
    is_family_list?: boolean;
    /**
     * Hex color code in the format #1138CC
     */
    color: string;
};

export type ListPublic = {
    name: string;
    is_family_list?: boolean;
    /**
     * Hex color code in the format #1138CC
     */
    color: string;
    id: string;
};

export type ListUpdate = {
    name?: (string | null);
    is_family_list?: boolean;
    /**
     * Hex color code in the format #1138CC
     */
    color?: (string | null);
};

export type Message = {
    message: string;
};

export type Task = {
    title: string;
    notes?: (string | null);
    completed?: boolean;
    id?: string;
    created_at?: string;
    updated_at?: string;
    user_id: string;
    list_id: string;
};

export type TaskCreate = {
    title: string;
    notes?: (string | null);
    completed?: boolean;
    user_id: string;
    list_id: string;
};

export type TaskPublic = {
    title: string;
    notes?: (string | null);
    completed?: boolean;
    id: string;
};

export type TasksPublic = {
    data: Array<Task>;
    count: number;
};

/**
 * Class representing the JSON payload containing an access token and its type.
 */
export type Token = {
    access_token: string;
    token_type?: string;
};

/**
 * Class for user creation with additional password field.
 */
export type UserCreate = {
    email: string;
    name?: (string | null);
    is_admin?: boolean;
    password: string;
};

/**
 * Class for user data to be returned via API, including the user's ID.
 */
export type UserPublic = {
    email: string;
    name?: (string | null);
    is_admin?: boolean;
    id: string;
    family_id: (string | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type FamiliesCreateFamilyData = {
    name: string;
};

export type FamiliesCreateFamilyResponse = (FamilyPublic);

export type FamiliesJoinFamilyData = {
    inviteCode: string;
};

export type FamiliesJoinFamilyResponse = (FamilyPublic);

export type ListsCreateListData = {
    requestBody: ListCreate;
};

export type ListsCreateListResponse = (ListPublic);

export type ListsUpdateListData = {
    listId: string;
    requestBody: ListUpdate;
};

export type ListsUpdateListResponse = (ListPublic);

export type ListsDeleteListData = {
    currentUser: unknown;
    id: string;
};

export type ListsDeleteListResponse = (Message);

export type LoginLoginAccessTokenData = {
    formData: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = (Token);

export type PingPingResponse = (unknown);

export type TasksReadTasksResponse = (TasksPublic);

export type TasksCreateTaskData = {
    requestBody: TaskCreate;
};

export type TasksCreateTaskResponse = (TaskPublic);

export type TasksCompleteTaskData = {
    id: string;
};

export type TasksCompleteTaskResponse = (TaskPublic);

export type TasksDeleteTaskData = {
    id: string;
};

export type TasksDeleteTaskResponse = (Message);

export type UsersReadUserMeResponse = (UserPublic);

export type UsersRegisterUserData = {
    requestBody: UserCreate;
};

export type UsersRegisterUserResponse = (UserPublic);

export type UsersPromoteUserData = {
    userId: string;
};

export type UsersPromoteUserResponse = (Message);