{
  "openapi": "3.1.0",
  "info": { "title": "Fridge - Family Task Manager", "version": "0.1.0" },
  "paths": {
    "/api/ping/": {
      "get": {
        "tags": ["ping"],
        "summary": "Ping",
        "operationId": "ping-ping",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/api/login/access-token": {
      "post": {
        "tags": ["login"],
        "summary": "Login Access Token",
        "description": "Authenticates a user and returns an access token if credentials are correct.",
        "operationId": "login-login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": ["users"],
        "summary": "Read User Me",
        "description": "Retrieves the current authenticated user's information.",
        "operationId": "users-read_user_me",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/users/signup": {
      "post": {
        "tags": ["users"],
        "summary": "Register User",
        "description": "Create new user without the need to be logged in.",
        "operationId": "users-register_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/users/promote/{user_id}": {
      "post": {
        "tags": ["users"],
        "summary": "Promote User",
        "operationId": "users-promote_user",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "User Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/families/": {
      "post": {
        "tags": ["families"],
        "summary": "Create Family",
        "description": "Create new family.",
        "operationId": "families-create_family",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Name" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FamilyPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/families/join": {
      "post": {
        "tags": ["families"],
        "summary": "Join Family",
        "description": "Join a family.",
        "operationId": "families-join_family",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "invite_code",
            "in": "query",
            "required": true,
            "schema": { "type": "string", "title": "Invite Code" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/FamilyPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/tasks/": {
      "get": {
        "tags": ["tasks"],
        "summary": "Read Tasks",
        "description": "Retrieve tasks.",
        "operationId": "tasks-read_tasks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TasksPublic" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      },
      "post": {
        "tags": ["tasks"],
        "summary": "Create Task",
        "description": "Create new task.",
        "operationId": "tasks-create_task",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TaskCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/tasks/{id}": {
      "patch": {
        "tags": ["tasks"],
        "summary": "Complete Task",
        "description": "Complete task.",
        "operationId": "tasks-complete_task",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TaskPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["tasks"],
        "summary": "Delete Task",
        "description": "Delete task",
        "operationId": "tasks-delete_task",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lists/": {
      "post": {
        "tags": ["lists"],
        "summary": "Create List",
        "description": "Create new list.",
        "operationId": "lists-create_list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/lists/{list_id}": {
      "patch": {
        "tags": ["lists"],
        "summary": "Update List",
        "description": "Update a list.",
        "operationId": "lists-update_list",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "list_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "List Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ListUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ListPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/lists/{id}": {
      "delete": {
        "tags": ["lists"],
        "summary": "Delete List",
        "description": "Delete list",
        "operationId": "lists-delete_list",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Id" }
          },
          {
            "name": "current_user",
            "in": "query",
            "required": true,
            "schema": { "title": "Current User" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Message" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_login-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "password" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_login-login_access_token"
      },
      "FamilyPublic": {
        "properties": {
          "name": { "type": "string", "title": "Name" },
          "invite_code": { "type": "string", "title": "Invite Code" },
          "id": { "type": "string", "format": "uuid", "title": "Id" }
        },
        "type": "object",
        "required": ["name", "invite_code", "id"],
        "title": "FamilyPublic",
        "description": "Class for family data to be returned via API"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ListCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "is_family_list": {
            "type": "boolean",
            "title": "Is Family List",
            "default": false
          },
          "color": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "title": "Color",
            "description": "Hex color code in the format #1138CC"
          }
        },
        "type": "object",
        "required": ["name", "color"],
        "title": "ListCreate"
      },
      "ListPublic": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "is_family_list": {
            "type": "boolean",
            "title": "Is Family List",
            "default": false
          },
          "color": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "title": "Color",
            "description": "Hex color code in the format #1138CC"
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" }
        },
        "type": "object",
        "required": ["name", "color", "id"],
        "title": "ListPublic"
      },
      "ListUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              { "type": "string", "maxLength": 255, "minLength": 1 },
              { "type": "null" }
            ],
            "title": "Name"
          },
          "is_family_list": {
            "type": "boolean",
            "title": "Is Family List",
            "default": false
          },
          "color": {
            "anyOf": [
              { "type": "string", "maxLength": 7, "minLength": 7 },
              { "type": "null" }
            ],
            "title": "Color",
            "description": "Hex color code in the format #1138CC"
          }
        },
        "type": "object",
        "title": "ListUpdate"
      },
      "Message": {
        "properties": { "message": { "type": "string", "title": "Message" } },
        "type": "object",
        "required": ["message"],
        "title": "Message"
      },
      "Task": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "notes": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Notes"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed",
            "default": false
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "user_id": { "type": "string", "format": "uuid", "title": "User Id" },
          "list_id": { "type": "string", "format": "uuid", "title": "List Id" }
        },
        "type": "object",
        "required": ["title", "user_id", "list_id"],
        "title": "Task"
      },
      "TaskCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "notes": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Notes"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed",
            "default": false
          },
          "user_id": { "type": "string", "format": "uuid", "title": "User Id" },
          "list_id": { "type": "string", "format": "uuid", "title": "List Id" }
        },
        "type": "object",
        "required": ["title", "user_id", "list_id"],
        "title": "TaskCreate"
      },
      "TaskPublic": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Title"
          },
          "notes": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Notes"
          },
          "completed": {
            "type": "boolean",
            "title": "Completed",
            "default": false
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" }
        },
        "type": "object",
        "required": ["title", "id"],
        "title": "TaskPublic"
      },
      "TasksPublic": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/Task" },
            "type": "array",
            "title": "Data"
          },
          "count": { "type": "integer", "title": "Count" }
        },
        "type": "object",
        "required": ["data", "count"],
        "title": "TasksPublic"
      },
      "Token": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": ["access_token"],
        "title": "Token",
        "description": "Class representing the JSON payload containing an access token and its type."
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Name"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "default": false
          },
          "password": {
            "type": "string",
            "maxLength": 40,
            "minLength": 4,
            "title": "Password"
          }
        },
        "type": "object",
        "required": ["email", "password"],
        "title": "UserCreate",
        "description": "Class for user creation with additional password field."
      },
      "UserPublic": {
        "properties": {
          "email": {
            "type": "string",
            "maxLength": 255,
            "format": "email",
            "title": "Email"
          },
          "name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Name"
          },
          "is_admin": {
            "type": "boolean",
            "title": "Is Admin",
            "default": false
          },
          "id": { "type": "string", "format": "uuid", "title": "Id" }
        },
        "type": "object",
        "required": ["email", "id"],
        "title": "UserPublic",
        "description": "Class for user data to be returned via API, including the user's ID."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": { "scopes": {}, "tokenUrl": "/api/login/access-token" }
        }
      }
    }
  }
}
