{"openapi": "3.1.0", "info": {"title": "Fridge - Family Task Manager", "version": "0.1.0"}, "paths": {"/api/ping/": {"get": {"tags": ["ping"], "summary": "Ping", "operationId": "ping-ping", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "Authenticates a user and returns an access token if credentials are correct.", "operationId": "login-login_access_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login-login_access_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/login/test-token": {"post": {"tags": ["login"], "summary": "Test Token", "description": "Test access token", "operationId": "login-test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Retrieves the current authenticated user's information.", "operationId": "users-read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User", "description": "Retrieves a user's information by id.", "operationId": "users-read_user", "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/users/signup": {"post": {"tags": ["users"], "summary": "Register User", "description": "Create new user without the need to be logged in.", "operationId": "users-register_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/users/promote/{user_id}": {"post": {"tags": ["users"], "summary": "Promote User", "description": "Promotes a user to admin. The current admin gets demoted to regular user.", "operationId": "users-promote_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/families/": {"post": {"tags": ["families"], "summary": "Create Family", "description": "Create new family.", "operationId": "families-create_family", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "name", "in": "query", "required": true, "schema": {"type": "string", "title": "Name"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FamilyPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/families/join": {"post": {"tags": ["families"], "summary": "Join Family", "description": "Join a family.", "operationId": "families-join_family", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "invite_code", "in": "query", "required": true, "schema": {"type": "string", "title": "Invite Code"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/FamilyPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/families/{family_id}/members": {"get": {"tags": ["families"], "summary": "Read Family Members", "description": "Reads family members.", "operationId": "families-read_family_members", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "family_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Family Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/families/{family_id}/invite-code": {"get": {"tags": ["families"], "summary": "Read Family Invite Code", "description": "Reads family invite code.", "operationId": "families-read_family_invite_code", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "family_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Family Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response Families-Read Family Invite Code"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/tasks/{list_id}": {"get": {"tags": ["tasks"], "summary": "Read Tasks", "description": "Retrieve tasks.", "operationId": "tasks-read_tasks", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "list_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "List Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TasksPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/tasks/": {"post": {"tags": ["tasks"], "summary": "Create Task", "description": "Create new task.", "operationId": "tasks-create_task", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/tasks/{task_id}": {"patch": {"tags": ["tasks"], "summary": "Update Task", "description": "Update task.", "operationId": "tasks-update_task", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "task_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Task Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["tasks"], "summary": "Delete Task", "description": "Delete task", "operationId": "tasks-delete_task", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "task_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Task Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/tasks/{task_id}/status": {"patch": {"tags": ["tasks"], "summary": "Update Task Status", "description": "Update task status.", "operationId": "tasks-update_task_status", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "task_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Task Id"}}, {"name": "completed", "in": "query", "required": true, "schema": {"type": "boolean", "title": "Completed"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/tasksclear/{list_id}": {"delete": {"tags": ["tasks"], "summary": "Clear Tasks", "description": "Clears a lists tasks. Only completed tasks will get cleared.", "operationId": "tasks-clear_tasks", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "list_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "List Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/lists/personal": {"get": {"tags": ["lists"], "summary": "Read Personal Lists", "description": "Retrieve personal lists.", "operationId": "lists-read_personal_lists", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListsPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/lists/family": {"get": {"tags": ["lists"], "summary": "Read Family Lists", "description": "Retrieve family lists.", "operationId": "lists-read_family_lists", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListsPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/lists/{list_id}": {"get": {"tags": ["lists"], "summary": "Read List", "description": "Retrieve list.", "operationId": "lists-read_list", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "list_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "List Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/List"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["lists"], "summary": "Update List", "description": "Update list.", "operationId": "lists-update_list", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "list_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "List Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["lists"], "summary": "Delete List", "description": "Delete list", "operationId": "lists-delete_list", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "list_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "List Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/lists/": {"post": {"tags": ["lists"], "summary": "Create List", "description": "Create new list.", "operationId": "lists-create_list", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ListPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}}, "components": {"schemas": {"Body_login-login_access_token": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "password"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login-login_access_token"}, "FamilyPublic": {"properties": {"name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Name"}, "invite_code": {"type": "string", "maxLength": 8, "minLength": 8, "title": "Invite Code"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["name", "id"], "title": "FamilyPublic", "description": "Class for family data to be returned via API"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "List": {"properties": {"name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Name"}, "is_family_list": {"type": "boolean", "title": "Is Family List", "default": false}, "color": {"type": "string", "maxLength": 7, "minLength": 7, "title": "Color", "description": "Hex color code in the format #1138CC", "default": "#3B82F6"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "user_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "User Id"}, "family_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Family Id"}}, "type": "object", "required": ["name"], "title": "List", "description": "Database  model for List"}, "ListCreate": {"properties": {"name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Name"}, "is_family_list": {"type": "boolean", "title": "Is Family List", "default": false}, "color": {"type": "string", "maxLength": 7, "minLength": 7, "title": "Color", "description": "Hex color code in the format #1138CC", "default": "#3B82F6"}}, "type": "object", "required": ["name"], "title": "ListCreate"}, "ListDisplay": {"properties": {"name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Name"}, "is_family_list": {"type": "boolean", "title": "Is Family List", "default": false}, "color": {"type": "string", "maxLength": 7, "minLength": 7, "title": "Color", "description": "Hex color code in the format #1138CC", "default": "#3B82F6"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "task_count": {"type": "integer", "title": "Task Count"}}, "type": "object", "required": ["name", "id", "task_count"], "title": "ListDisplay", "description": "Class for display list data to be returned via API."}, "ListPublic": {"properties": {"name": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Name"}, "is_family_list": {"type": "boolean", "title": "Is Family List", "default": false}, "color": {"type": "string", "maxLength": 7, "minLength": 7, "title": "Color", "description": "Hex color code in the format #1138CC", "default": "#3B82F6"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["name", "id"], "title": "ListPublic", "description": "Class for list data to be returned via API."}, "ListUpdate": {"properties": {"name": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Name"}, "color": {"anyOf": [{"type": "string", "maxLength": 7, "minLength": 7}, {"type": "null"}], "title": "Color", "description": "Hex color code in the format #1138CC"}}, "type": "object", "title": "ListUpdate", "description": "Update model for List"}, "ListsPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ListDisplay"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ListsPublic", "description": "Class for display lists data to be returned via API."}, "Message": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "Message", "description": "Class representing the message model."}, "Task": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "notes": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Notes"}, "completed": {"type": "boolean", "title": "Completed", "default": false}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "list_id": {"type": "string", "format": "uuid", "title": "List Id"}}, "type": "object", "required": ["title", "user_id", "list_id"], "title": "Task", "description": "Database  model for List"}, "TaskCreate": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "notes": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Notes"}, "completed": {"type": "boolean", "title": "Completed", "default": false}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}, "list_id": {"type": "string", "format": "uuid", "title": "List Id"}}, "type": "object", "required": ["title", "user_id", "list_id"], "title": "TaskCreate", "description": "Class for creating task."}, "TaskPublic": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "notes": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Notes"}, "completed": {"type": "boolean", "title": "Completed", "default": false}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["title", "id"], "title": "TaskPublic", "description": "Class for list data to be returned via API."}, "TaskUpdate": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "notes": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Notes"}, "completed": {"type": "boolean", "title": "Completed", "default": false}, "user_id": {"type": "string", "format": "uuid", "title": "User Id"}}, "type": "object", "required": ["title", "user_id"], "title": "TaskUpdate", "description": "Class for updating task."}, "TasksPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/Task"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "TasksPublic", "description": "Class for display lists data to be returned via API."}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "bearer"}}, "type": "object", "required": ["access_token"], "title": "Token", "description": "Class representing the JSON payload containing an access token and its type."}, "UserCreate": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Name"}, "is_admin": {"type": "boolean", "title": "Is Admin", "default": false}, "password": {"type": "string", "maxLength": 40, "minLength": 4, "title": "Password"}}, "type": "object", "required": ["email", "password"], "title": "UserCreate", "description": "Class for user creation with additional password field."}, "UserPublic": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Name"}, "is_admin": {"type": "boolean", "title": "Is Admin", "default": false}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "family_id": {"anyOf": [{"type": "string", "format": "uuid"}, {"type": "null"}], "title": "Family Id"}}, "type": "object", "required": ["email", "id", "family_id"], "title": "UserPublic", "description": "Class for user data to be returned via API, including the user's ID."}, "UsersPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/UserPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "UsersPublic", "description": "Class for user data to be returned via API"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/login/access-token"}}}}}}
